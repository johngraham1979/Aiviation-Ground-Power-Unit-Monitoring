<UserControl x:Class="AXARemote.View.UserControl.ManualComms"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:AXARemote.ViewModel"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:converter="clr-namespace:AXARemote.Converter"
             xmlns:control="clr-namespace:AXARemote.Control"
             mc:Ignorable="d" Background="#EEE" Height="Auto">


    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AXARemote;component/Style/ButtonStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AXARemote;component/Style/ExpanderStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AXARemote;component/Style/ComboboxStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <GridLength x:Key="RowHeight">40</GridLength>

            <converter:ValueToBarHeightConverter x:Key="ValueToBarHeightConverter" />
        </ResourceDictionary>


    </UserControl.Resources>


    <UserControl.DataContext>
        <viewModel:ManualCommsViewModel />
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition Height="300" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Border Grid.Row="5" Grid.Column="0" Width="100" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="DarkGray"
                Height="240">
            <Border.Effect>
                <DropShadowEffect BlurRadius="7" Color="#AAAA" />
            </Border.Effect>
            <Border.Background>
                <LinearGradientBrush StartPoint="0 0" EndPoint="0 0.9">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="LightGray" Offset="0" />
                        <GradientStop Color="Transparent" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.Background>

            <Grid Width="80" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>

                <Rectangle Width="40" Grid.Row="0" Grid.RowSpan="12" VerticalAlignment="Bottom"
                           HorizontalAlignment="Center">
                    <Rectangle.Effect>
                        <DropShadowEffect BlurRadius="7" Color="#AAAA" />
                    </Rectangle.Effect>
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0 0" EndPoint="1 4">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="DarkGoldenrod" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                    <Rectangle.Height>
                        <MultiBinding Converter="{StaticResource ValueToBarHeightConverter}">
                            <Binding Path="GaugeValue" />
                            <Binding ElementName="BarScale" Path="Value" />
                        </MultiBinding>
                    </Rectangle.Height>
                </Rectangle>

                <Border BorderThickness="0 1 0 0" BorderBrush="Gray" Grid.Row="1" />
                <Border BorderThickness="0 1 0 0" BorderBrush="DarkGray" Grid.Row="2" />
                <Border BorderThickness="0 1 0 0" BorderBrush="Gray" Grid.Row="3" />
                <Border BorderThickness="0 1 0 0" BorderBrush="DarkGray" Grid.Row="4" />
                <Border BorderThickness="0 1 0 0" BorderBrush="Gray" Grid.Row="5" />
                <Border BorderThickness="0 1 0 0" BorderBrush="DarkGray" Grid.Row="6" />
                <Border BorderThickness="0 1 0 0" BorderBrush="Gray" Grid.Row="7" />
                <Border BorderThickness="0 1 0 0" BorderBrush="DarkGray" Grid.Row="8" />
                <Border BorderThickness="0 1 0 0" BorderBrush="Gray" Grid.Row="9" />
                <Border BorderThickness="0 1 0 0" BorderBrush="DarkGray" Grid.Row="10" />
                <Border BorderThickness="0 1 0 0" BorderBrush="Gray" Grid.Row="11" />
            </Grid>
        </Border>

        <TextBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" VerticalContentAlignment="Center" Width="100"
                 VerticalAlignment="Bottom" FontFamily="Consolas"
                 Text="{Binding GaugeValue, NotifyOnSourceUpdated=True, StringFormat=N3}" TextAlignment="Center"
                 FontSize="20" Height="40" Foreground="DarkGoldenrod" FontWeight="SemiBold" Padding="15 0 10 0">
            <TextBox.Effect>
                <DropShadowEffect BlurRadius="7" Color="#AAAA" />
            </TextBox.Effect>
            <TextBox.Background>
                <LinearGradientBrush StartPoint="1 2" EndPoint="0 0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="LightGray" Offset="0" />
                        <GradientStop Color="Transparent" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </TextBox.Background>
        </TextBox>


        <control:Button Grid.Row="3" Grid.Column="0" Content="Start" Command="{Binding StartCommand}">
            <control:Button.Style>
                <Style TargetType="{x:Type control:Button}" BasedOn="{StaticResource NavigationButton}">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOn" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightGreen" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOn" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightGreen" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOn" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Green" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </control:Button.Style>
        </control:Button>

        <control:Button Grid.Row="3" Grid.Column="1" Content="Stop" Command="{Binding StopCommand}"
                        IsOn="{Binding IsRunning}">
            <control:Button.Style>
                <Style TargetType="{x:Type control:Button}" BasedOn="{StaticResource NavigationButton}">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOn" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightPink" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsOn" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightCoral" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </control:Button.Style>
        </control:Button>

        <ComboBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding Axa2400PowerDictionary}"
                  DisplayMemberPath="Item1" SelectedItem="{Binding PowerDictionarySelection}" Width="200" />

        <!-- 1st Row (of UserControl): Expander of low-level settings -->
        <Canvas ZIndex="1000" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Expander ExpandDirection="Down" Style="{StaticResource ExpanderStyle}" Width="200">

                <Expander.Header>
                    <Grid>
                        <TextBlock Text="Manual Settings" Foreground="Gray" />
                    </Grid>
                </Expander.Header>

                <Grid Width="{Binding ElementName=GaugeUserControl, Path=ActualWidth}" Background="#EEE">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition Height="{StaticResource RowHeight}" />
                        <RowDefinition Height="{StaticResource RowHeight}" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>

                    <!-- 0th Row (of expander): Modbus Function -->
                    <Label Grid.Column="0" Grid.Row="0" Content="Function" VerticalAlignment="Center"
                           Target="{Binding ElementName=FunctionCode}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=FunctionCode, Path=Text}" Value="">
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=StartButton, Path=IsMouseOver}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <ComboBox Grid.Column="1" Grid.Row="0" x:Name="FunctionCode" Margin="0 0 1 0"
                              ToolTip="Modbus protocol function code." ItemsSource="{Binding FunctionCodes}"
                              DisplayMemberPath="Item1" SelectedItem="{Binding FunctionCodeSelection}">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=StartButton, Path=IsMouseOver}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>

                    <!-- 1st Row : Blank -->

                    <!-- 2nd Row (of expander): Modbus Register Address (in Decimal) -->
                    <Label Grid.Row="2" Grid.Column="0" x:Name="RegisterAddressLabel" Content="Address"
                           VerticalAlignment="Center"
                           Target="{Binding ElementName=RegisterAddress}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=StartButton, Path=IsMouseOver}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=RegisterAddress, Path=Text}" Value="">
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <TextBox Grid.Row="2" Grid.Column="1" x:Name="RegisterAddress"
                             ToolTip="Modbus register address (in decimal)."
                             HorizontalContentAlignment="Right"
                             Margin="0 0 1 0"
                             Text="{Binding RegisterAddress, Mode=TwoWay}"
                             VerticalContentAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=StartButton, Path=IsMouseOver}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <!-- 3rd Row (of expander): Scaling factor -->
                    <Label Grid.Column="0" Grid.Row="3" Content="Scale" Target="{Binding ElementName=ScalingFactor}"
                           VerticalAlignment="Center">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ScalingFactor, Path=Value}" Value="1">
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=StartButton, Path=IsMouseOver}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <xctk:DoubleUpDown Grid.Column="1" Grid.Row="3" x:Name="ScalingFactor" ToolTip="Scaling factor."
                                       Increment="0.01" Value="1"
                                       Minimum="0.1"
                                       Text="{Binding ScalingFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"
                                       VerticalContentAlignment="Center" HorizontalContentAlignment="Right"
                                       HorizontalAlignment="Stretch">
                        <xctk:DoubleUpDown.Style>
                            <Style TargetType="{x:Type xctk:DoubleUpDown}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=StartButton, Path=IsMouseOver}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Blue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </xctk:DoubleUpDown.Style>
                    </xctk:DoubleUpDown>

                    <!-- 4th Row : Blank -->

                    <!-- 5th Row (of expander): Polling Rate -->
                    <Label Grid.Column="0" Grid.Row="5" Content="Poll Rate" Target="{Binding ElementName=PollRate}"
                           VerticalAlignment="Center" />
                    <xctk:DoubleUpDown Grid.Column="1" Grid.Row="5" x:Name="PollRate"
                                       Minimum="0.5"
                                       ToolTip="Polls of modbus register per second."
                                       Increment="0.1"
                                       Value="1"
                                       Text="{Binding PollRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N1}"
                                       VerticalContentAlignment="Center" HorizontalContentAlignment="Right"
                                       HorizontalAlignment="Stretch" />

                    <!-- 5th Row (of expander): Polling Rate -->
                    <Label Grid.Column="0" Grid.Row="6" Content="Bar Scale" Target="{Binding ElementName=PollRate}"
                           VerticalAlignment="Center" />
                    <xctk:DoubleUpDown Grid.Column="1" Grid.Row="6" x:Name="BarScale"
                                       Minimum="0.5"
                                       ToolTip="Polls of modbus register per second."
                                       Increment="0.1"

                                       Value="{Binding BarGraphScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N1}"
                                       VerticalContentAlignment="Center" HorizontalContentAlignment="Right"
                                       HorizontalAlignment="Stretch" />
                </Grid>

            </Expander>
        </Canvas>
    </Grid>
</UserControl>